# windows - install packer and vagrant
choco install vagrant packer
choco upgrade vagrant packer

# to change path to the .vagrant.d

# linux
export VAGRANT_HOME=$HOME/.vagrant.d

# windows
setx VAGRANT_HOME H:\vagrant\.vagrant.d

# create alias for vagrant
New-Alias -Name "vg" vagrant

# vagrant add a box generated by packer and use init to generate Vagrantfile
vagrant box add --name packer-windows-2022-std-g2 H:\automation-test\hv-packer\vbox\packer-windows-2022-std-g2.box
vagrant init --minimal packer-windows-2022-std-g2

# get a Vagrantfile
vagrant init --minimal gusztavvargadr/windows-11

# use hyperv for creating machine
vagrant up --provider hyperv
# measure timing for vagrant up
Measure-Command { vagrant up --provider hyperv | Out-Default }

# use virtualbox for creating machine
vagrant up --provider virtualbox

# vagrant up with no provision
vagrant up --provider hyperv win11 --no-provision

# destroy a machine
vagrant destroy -f controller

# suspend and resume
vagrant suspend
vagrant resume

# halt a machine (shutdown)
vagrant halt win11

# reload VM after configuration change
vagrant reload controller

# check status of a VM
vagrant status

# run a provisioner
vagrant provision controller --provision-with ansible_remote

# save a VM snapshot
vagrant snapshot save win11 before_install

# delete a VM snapshot
vagrant snapshot delete win11 before_install

# restore a VM snapshot
vagrant snapshot restore win11 before_install

# vagrant save ssh config. use winrm-config for winrm
vagrant ssh-config win11 > ssh-config-win11
vagrant winrm-config win11

# vagrant ssh into a machine
vagrant ssh controller

# vagrant install plugins
vagrant plugin install vagrant-reload
vagrant plugin install vagrant-xenserver

# install ansible - do not install on windows, windows is not supported as control node
pip install ansible

# windows
### enable "SMB Direct" windows optional feature
https://stackoverflow.com/questions/54264439/how-to-get-shared-folders-working-with-vagrant-and-hyper-v
### add windows user and password during prompt for smb share


### vagrant commands
$env:VAGRANT_HOME --- print location for .vagrant.d
vagrant status
vagrant init generic/ubuntu2104 --minimal
vagrant up --provider hyperv
vagrant up --provider hyperv controller
vagrant reload def
vagrant destroy -f
vagrant ssh def 
vagrant ssh-config def > ssh-config-def  --- then use: ssh -F .\ssh-config-def def
vagrant provision def --provision-with ansible_local
vagrant box add --name packer-windows-2022-std-g2 H:\automation-test\hv-packer\vbox\packer-windows-2022-std-g2.box
vagrant init --minimal packer-windows-2022-std-g2


### ansible commands
vagrant ssh-config def > ssh-config-def
vagrant provision def --provision-with ansible_local


win11 ansible_winrm_host=172.27.212.238 ansible_port=5985 ansible_connection=winrm ansible_winrm_server_cert_validation=ignore ansible_user=vagrant ansible_password=vagrant


LINKS:
https://github.com/marcinbojko/hv-packer
https://github.com/haidaraM/vagrant-to-ansible-inventory
https://blog.crisp.se/2016/10/20/maxwenzin/how-to-append-to-lists-in-ansible


# build vagrant-xenserver plugin (remove version number for nokogiri in vagrant-xenserver.gemspec)
gem build vagrant-xenserver.gemspec
vagrant plugin install F:\DevTrees\OpenSource\vagrant\vagrant-xenserver\vagrant-xenserver-0.0.16.gem



